#!/source/this/sh

export_ () { export $1=$2 ; }

export_ MYBORG          $(cat ~/.local/var/myborg/current.txt)
export_ MYBORG_SBIN     ${MYBORG}/bin
export_ MYBORG_MANIFEST ${MYBORG}/MANIFEST
export_ MYBORG_DOTS     ${MYBORG}/dots
export_ MYBORG_BUILD        ${MYBORG}/.build
export_ MYBORG_MODS         ${MYBORG_BUILD}/mods
export_ MYBORG_VENDOR       ${MYBORG_BUILD}/vendor
export_ MYBORG_LBIN         ${MYBORG_BUILD}/lbin
export_ MYBORG_OPT          ${HOME}/.local/opt/MYBORG_OPT

export_ PATH ${PATH}:${HOME}/.local/bin
export_ PATH ${PATH}:${MYBORG_SBIN}
export_ PATH ${PATH}:${MYBORG_LBIN}

mkdir -p   ${MYBORG_BUILD}
rm -f      ${MYBORG_LBIN}/*
rmdir      ${MYBORG_LBIN}
mkdir -p   ${MYBORG_LBIN}

# This function is used by clients.
#__lbin_default () { cp ../lbin/* ${MYBORG_LBIN} ; }
__lbin_default () { echo '*** __lbin_default is defunct ***' ; }


main () {
    echo "++[$MYBORG/main] $*"
    echo installing VENDOR     ; ${MYBORG}/VENDOR
    echo installing MANIFEST   ; ${MYBORG}/MANIFEST
    echo processing MANIFEST   ; __myborg_process_mods
    echo processing BORGIFY    ; __myborg_borgify $1
    echo "++[$MYBORG/main] $*"
}

__myborg_borgify () {
    [ "$1" == "" ] && return
    __myborg_source () { echo "  sourcing [$*]"; source $*; }
    __myborg_source borg:__first__
    __myborg_source ${MYBORG_DOTS}/dot$1
    __myborg_source borg:__last__
    __myborg_source borg:path:clean
}


__myborg_process_mod () {
    path=$1
    printf "  processing [$(basename $1)]:"
    [ -d ${1}/lbin ] && printf " lbin"
    [ -d ${1}/lbin ] && cp ${1}/lbin/* ${MYBORG_LBIN}
    [ -f ${1}/.insitu/activate ] && printf " activate"
    [ -f ${1}/.insitu/activate ] && . borg:insitu $1/.insitu . ./activate
    echo
}
__myborg_process_mods () {
    for path in $(borg.ls.fullpath ${MYBORG_MODS}); do __myborg_process_mod $path ; done
}


main $*
